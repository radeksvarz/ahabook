#!/bin/bash
# This deploy hook gets executed after dependencies are resolved and the
# build hook has been run but before the application has been started back
# up again.  This script gets executed directly, so it could be python, php,
# ruby, etc.

# Make the static files directory for the application
# and link to wsgi/static

if [ ! -d $OPENSHIFT_DATA_DIR/static ]; then
    mkdir $OPENSHIFT_DATA_DIR/static
fi

if [ -d $OPENSHIFT_REPO_DIR/wsgi/static ]; then
    rm -rf $OPENSHIFT_REPO_DIR/wsgi/static
fi

ln -sf $OPENSHIFT_DATA_DIR/static $OPENSHIFT_REPO_DIR/wsgi/static

# Make the media directory available for the application

if [ ! -d $OPENSHIFT_DATA_DIR/media ]; then
    mkdir $OPENSHIFT_DATA_DIR/media
fi

ln -sf $OPENSHIFT_DATA_DIR/media $OPENSHIFT_DATA_DIR/static/media

source $OPENSHIFT_PYTHON_DIR/virtenv/venv/bin/activate

# If no database exists create one with sample content.
#if [ ! -f $OPENSHIFT_DATA_DIR/sqlite3.db ]
#then
#    echo "Creating intial database with example content."
#    python "$OPENSHIFT_REPO_DIR"manage.py createdb --noinput --settings=settings.production
#fi

# Always collect static files, static dir is erased on push and we might have
# something new.
echo "Executing 'python $OPENSHIFT_REPO_DIR/manage.py collectstatic --noinput --settings=settings.production'"
python "$OPENSHIFT_REPO_DIR"manage.py collectstatic --noinput --settings=settings.production

# Execute DB migrations
python "$OPENSHIFT_REPO_DIR"manage.py migrate --noinput --settings=settings.production


# Make the web root files (favicon.ico, robots.txt) available

#ln -sf $OPENSHIFT_REPO_DIR/wsgi/wwwroot $OPENSHIFT_DATA_DIR/static/wwwroot

